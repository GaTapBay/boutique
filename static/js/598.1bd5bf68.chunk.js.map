{"version":3,"file":"static/js/598.1bd5bf68.chunk.js","mappings":"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","sources":["UI/SlideShow.jsx","pages/DetailPage/index.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport './SlideShow.scss';\r\nexport default function SlideShow(props) {\r\n    const [previewImage, setPreviewImage] = useState(0);\r\n    const setActiveImage = (i) => {\r\n        setPreviewImage(i);\r\n    }\r\n\r\n    return (\r\n        <div className='flex flex--gap slideshow'>\r\n            <div className='col--min'>\r\n                <ul className='slideshow__list'>\r\n                    {props.items.length > 0 && (\r\n                        props.items.map((url, i) => {\r\n                            return <li key={i} onClick={() => setActiveImage(i)}><img src={url} /></li>\r\n                        })\r\n                    )}\r\n                </ul>\r\n            </div>\r\n            <div className='col'>\r\n                <div className='slideshow__preview'>\r\n                    <img src={props.items[previewImage]} alt='' />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport useGetData from \"hooks/use-GetData\";\r\nimport { API_PRODUCTS } from \"config\";\r\nimport SlideShow from 'UI/SlideShow';\r\nimport ProductsList from \"components/ProductsList\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addItem } from 'store/cartReducer';\r\n\r\nimport './style.scss';\r\nexport default function DetailPage() {\r\n    // Lấy dữ liệu từ url\r\n    const param = useParams();\r\n    const [quantity, setQuantity] = useState(1);\r\n\r\n    // Lấy dữ liệu từ api truyền cho component Produsts List\r\n    // Mặc định truyền 1 mảng 8 item null để component Products List biết trước số lượng để tạo skeleton\r\n    const [product, setProduct] = useState(null);\r\n    const [products, setProducts] = useState(null);\r\n    const applyProducts = (data) => {\r\n        setProducts(s => data);\r\n        setProduct(s => (data.filter(x => x._id.$oid === param.id))[0]);\r\n    }\r\n    const { status, sendRequest } = useGetData(API_PRODUCTS, applyProducts);\r\n\r\n    // Mỗi khi param thay đổi sẽ cần lấy lại api\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        sendRequest();\r\n    }, [param]);\r\n\r\n    // Phần này do Back End làm việc hơi chán nên phải làm thủ công\r\n    let imgs = [];\r\n    if (product) {\r\n        imgs = [product.img1, product.img2, product.img3, product.img4];\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n    // Thêm sản phẩm vào giỏ hàng\r\n    const addToCart = () => {\r\n        const d = {\r\n            id: product._id.$oid,\r\n            img: product.img1,\r\n            name: product.name,\r\n            price: product.price,\r\n            amount: quantity\r\n        }\r\n        dispatch(addItem(d));\r\n    }\r\n\r\n    const descQuantity = () => {\r\n        if (quantity > 1) { setQuantity(s => s - 1); }\r\n    }\r\n\r\n    const incQuantity = () => {\r\n        setQuantity(s => s + 1);\r\n    }\r\n\r\n    return (\r\n        <main>\r\n            <div className=\"container\">\r\n                <div className=\"gap--50\"></div>\r\n                <div className=\"flex flex--gap\">\r\n                    <div className=\"col-sm-12 col-lg-6\">\r\n                        {product && (\r\n                            <SlideShow items={imgs} />\r\n                        )}\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-lg-6\">\r\n                        {product && (\r\n                            <div className=\"detailpage-detail\">\r\n                                <h2>{product.name}</h2>\r\n                                <div className=\"gap--10\"></div>\r\n                                <h4>{new Intl.NumberFormat(\"de-DE\").format(product.price) + ' VNĐ'}</h4>\r\n                                <div className=\"gap--20\"></div>\r\n                                <p>{product.short_desc}</p>\r\n                                <div className='gap--20'></div>\r\n                                <div>\r\n                                    <h5>Category: {product.category}</h5>\r\n                                </div>\r\n                                <div className=\"gap--20\"></div>\r\n                                <div className=\"flex y--center\">\r\n                                    <div className=\"quantity\">\r\n                                        <span>Quantity</span>\r\n                                        <button onClick={descQuantity}>\r\n                                            <i className=\"fa fa-caret-left\"></i>\r\n                                        </button>\r\n                                        <span>{quantity}</span>\r\n                                        <button onClick={incQuantity}>\r\n                                            <i className=\"fa fa-caret-right\"></i>\r\n                                        </button>\r\n                                    </div>\r\n                                    <button className='btn black btn--icon pi--30' onClick={addToCart}>\r\n                                        <i className='fa fa-shopping-cart'></i> Add to cart\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <div className=\"gap--50\"></div>\r\n                <h5>PRODUCT DESCRIPTION</h5>\r\n                <div className=\"gap\"></div>\r\n                <div>{product ? product.long_desc : ''}</div>\r\n                <div className=\"gap--50\"></div>\r\n                <h5>RELATED PRODUCTS</h5>\r\n                {product && (\r\n                    <ProductsList items={products.filter(x => x.category === product.category && x._id.$oid !== product._id.$oid)} column={4} status={status} />\r\n                )}\r\n            </div>\r\n        </main>\r\n    )\r\n}"],"names":["SlideShow","props","_useState","useState","_useState2","_slicedToArray","previewImage","setPreviewImage","_jsxs","className","children","_jsx","items","length","map","url","i","onClick","setActiveImage","src","alt","DetailPage","param","useParams","quantity","setQuantity","_useState3","_useState4","product","setProduct","_useState5","_useState6","products","setProducts","_useGetData","useGetData","API_PRODUCTS","data","s","filter","x","_id","$oid","id","status","sendRequest","useEffect","window","scrollTo","imgs","img1","img2","img3","img4","dispatch","useDispatch","name","Intl","NumberFormat","format","price","short_desc","category","d","img","amount","addItem","long_desc","ProductsList","column"],"sourceRoot":""}