{"version":3,"file":"static/js/677.9dc6523e.chunk.js","mappings":"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","sources":["UI/Notify.jsx","pages/LoginPage/index.jsx"],"sourcesContent":["import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './Notify.scss';\r\nexport default function Notify(p) {\r\n    const message = !Array.isArray(p.message) ? [p.message] : p.message;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {ReactDOM.createPortal(\r\n                <div className={`notify ${p.type ? p.type : 'error'} animated fadeIn`}>\r\n                    <ul>\r\n                        {message.length > 0 && (\r\n                            message.map((e, i) => {\r\n                                return <li key={i}>{e}</li>\r\n                            })\r\n                        )}\r\n                    </ul>\r\n                    <span className=\"notify-close\" onClick={p.close}>&times;</span>\r\n                </div>\r\n                , document.getElementById('popup'))}\r\n        </React.Fragment>\r\n    )\r\n}","import React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { REGISTER_PAGE, HOME } from \"config\";\r\nimport Notify from 'UI/Notify';\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from 'store/userReducer';\r\n\r\n\r\nimport './style.scss';\r\nexport default function LoginPage() {\r\n    // state error lưu thông tin lỗi phát sinh, nếu có lỗi sẽ kích hoạt popup notify\r\n    const [error, setError] = useState(null);\r\n\r\n    // Các trường nhập vào\r\n    const [emailInput, setEmailInput] = useState('');\r\n    const [passwordInput, setPasswordInput] = useState('');\r\n\r\n    // Navigate control\r\n    const navigate = useNavigate();\r\n\r\n    // Lấy dữ liệu mảng users từ local\r\n    let users = localStorage.getItem('users') ? JSON.parse(localStorage.getItem('users')) : [];\r\n\r\n    // Redux dispatch\r\n    const dispatch = useDispatch();\r\n\r\n    // Xử lý sự kiện submit register\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        setError(null);\r\n\r\n        // Validate\r\n        if (emailInput === '' || passwordInput === '') {\r\n            setError('Email hoặc mật khẩu bị bỏ trống!')\r\n        } else if (users.findIndex(x => x.email.toLowerCase() === emailInput.toLowerCase() && x.password === passwordInput) === -1) {\r\n            setError('Email hoặc mật khẩu không chính xác');\r\n            setPasswordInput('');\r\n        } else {\r\n            dispatch(login(users.find(x => x.email.toLowerCase() === emailInput.toLowerCase() && x.password === passwordInput)));\r\n            setError(null);\r\n            navigate(HOME + '/')\r\n        }\r\n    }\r\n\r\n    return (<>\r\n        <div>\r\n            <div className=\"login-bg\" style={{ backgroundImage: 'url(./images/banner/1.jpg)' }}></div>\r\n            <div className=\"container\">\r\n                <div className=\"login-page\">\r\n                    <div className=\"card pi--30\">\r\n                        <div className=\"card__content align--center\">\r\n                            <h3>SIGN IN</h3>\r\n                            <div className=\"gap\"></div>\r\n                            <div className=\"gap\"></div>\r\n                            <form onSubmit={submitHandler}>\r\n                                <div className=\"\">\r\n                                    <input\r\n                                        type='email'\r\n                                        className=\"input\"\r\n                                        placeholder=\"Email\"\r\n                                        value={emailInput}\r\n                                        onChange={(e) => setEmailInput(e.target.value.trim())}\r\n                                    />\r\n                                    <input\r\n                                        type='password'\r\n                                        className=\"input\"\r\n                                        placeholder=\"Password\"\r\n                                        value={passwordInput}\r\n                                        onChange={(e) => setPasswordInput(e.target.value.trim())}\r\n                                        autoComplete='false'\r\n                                    />\r\n                                </div>\r\n                                <div className=\"gap\"></div>\r\n                                <div>\r\n                                    <button className=\"btn black\" type='submit'>Sign in</button>\r\n                                </div>\r\n                            </form>\r\n                            <div className=\"gap--50\"></div>\r\n                            <div className=\"align--center\">\r\n                                Create account?\r\n                                <Link to={REGISTER_PAGE} className=\"pi--20\">Sign up</Link>\r\n                            </div>\r\n                            <div className=\"gap--50\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {error && (\r\n            <Notify message={error} type='error' close={() => setError(null)} />\r\n        )}\r\n    </>)\r\n}"],"names":["Notify","p","message","Array","isArray","_jsx","React","children","ReactDOM","_jsxs","className","concat","type","length","map","e","i","onClick","close","document","getElementById","LoginPage","_useState","useState","_useState2","_slicedToArray","error","setError","_useState3","_useState4","emailInput","setEmailInput","_useState5","_useState6","passwordInput","setPasswordInput","navigate","useNavigate","users","localStorage","getItem","JSON","parse","dispatch","useDispatch","_Fragment","style","backgroundImage","onSubmit","preventDefault","findIndex","x","email","toLowerCase","password","login","find","HOME","placeholder","value","onChange","target","trim","autoComplete","Link","to","REGISTER_PAGE"],"sourceRoot":""}