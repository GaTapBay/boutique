{"version":3,"file":"static/js/145.68c26cf5.chunk.js","mappings":"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","sources":["UI/Notify.jsx","pages/RegisterPage/index.jsx"],"sourcesContent":["import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './Notify.scss';\r\nexport default function Notify(p) {\r\n    const message = !Array.isArray(p.message) ? [p.message] : p.message;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {ReactDOM.createPortal(\r\n                <div className={`notify ${p.type ? p.type : 'error'} animated fadeIn`}>\r\n                    <ul>\r\n                        {message.length > 0 && (\r\n                            message.map((e, i) => {\r\n                                return <li key={i}>{e}</li>\r\n                            })\r\n                        )}\r\n                    </ul>\r\n                    <span className=\"notify-close\" onClick={p.close}>&times;</span>\r\n                </div>\r\n                , document.getElementById('popup'))}\r\n        </React.Fragment>\r\n    )\r\n}","import React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { LOGIN_PAGE } from \"config\";\r\nimport Notify from 'UI/Notify';\r\n\r\nimport './style.scss';\r\nexport default function RegisterPage() {\r\n    // state error lưu thông tin lỗi phát sinh, nếu có lỗi sẽ kích hoạt popup notify\r\n    const [error, setError] = useState(null);\r\n\r\n    // Các trường nhập vào\r\n    const [fullnameInput, setFullnameInput] = useState('');\r\n    const [emailInput, setEmailInput] = useState('');\r\n    const [phoneInput, setPhoneInput] = useState('');\r\n    const [passwordInput, setPasswordInput] = useState('');\r\n\r\n    // Navigate control\r\n    const navigate = useNavigate();\r\n\r\n    // Lấy dữ liệu mảng users từ local\r\n    let users = localStorage.getItem('users') ? JSON.parse(localStorage.getItem('users')) : [];\r\n\r\n    // Xử lý sự kiện submit register\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Validate\r\n        if (fullnameInput.trim() === '' || emailInput === '' || phoneInput === '' || passwordInput === '') {\r\n            setError('Một hoặc nhiều trường bị bỏ trống!')\r\n        } else if (passwordInput.length < 8) {\r\n            setError('Mật khẩu cần lớn hơn 8 kí tự')\r\n        } else if (users.findIndex(x => x.email.toLowerCase() === emailInput.toLowerCase()) !== -1) {\r\n            setError('Email đã tồn tại trên hệ thống')\r\n        } else {\r\n            // Nếu không có lỗi đóng gói dữ liệu lưu vào local\r\n            const newUser = {\r\n                fullname: fullnameInput,\r\n                email: emailInput,\r\n                phone: phoneInput,\r\n                password: passwordInput\r\n            }\r\n            users.push(newUser);\r\n            localStorage.setItem('users', JSON.stringify(users));\r\n\r\n            // Reset và chuyển hướng\r\n            setError(null);\r\n            navigate(LOGIN_PAGE);\r\n        }\r\n    }\r\n\r\n    return (<>\r\n        <div>\r\n            <div className=\"login-bg\" style={{ backgroundImage: 'url(./images/banner/1.jpg)' }}></div>\r\n            <div className=\"container\">\r\n                <div className=\"login-page\">\r\n                    <div className=\"card pi--30\">\r\n                        <div className=\"card__content align--center\">\r\n                            <h3>SIGN UP</h3>\r\n                            <div className=\"gap\"></div>\r\n                            <div className=\"gap\"></div>\r\n                            <form onSubmit={submitHandler}>\r\n                                <div className=\"\">\r\n                                    <input\r\n                                        type='text'\r\n                                        className=\"input\"\r\n                                        placeholder=\"Full name\"\r\n                                        value={fullnameInput}\r\n                                        onChange={(e) => setFullnameInput(e.target.value)}\r\n                                    />\r\n                                    <input\r\n                                        type='email'\r\n                                        className=\"input\"\r\n                                        placeholder=\"Email\"\r\n                                        value={emailInput}\r\n                                        onChange={(e) => setEmailInput(e.target.value.trim())}\r\n                                    />\r\n                                    <input\r\n                                        type='text'\r\n                                        className=\"input\"\r\n                                        placeholder=\"Phone\"\r\n                                        value={phoneInput}\r\n                                        onChange={(e) => setPhoneInput(e.target.value.trim())}\r\n                                    />\r\n                                    <input\r\n                                        type='password'\r\n                                        className=\"input\"\r\n                                        placeholder=\"Password\"\r\n                                        value={passwordInput}\r\n                                        onChange={(e) => setPasswordInput(e.target.value.trim())}\r\n                                        autoComplete='false'\r\n                                    />\r\n                                </div>\r\n                                <div className=\"gap\"></div>\r\n                                <div>\r\n                                    <button className=\"btn black\" type=\"submit\">Sign up</button>\r\n                                </div>\r\n                            </form>\r\n                            <div className=\"gap--50\"></div>\r\n                            <div className=\"align--center\">\r\n                                Login?\r\n                                <Link to={LOGIN_PAGE} className=\"pi--20\">Sign in</Link>\r\n                            </div>\r\n                            <div className=\"gap--50\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {error && (\r\n            <Notify message={error} type='error' close={() => setError(null)} />\r\n        )}\r\n    </>)\r\n}"],"names":["Notify","p","message","Array","isArray","_jsx","React","children","ReactDOM","_jsxs","className","concat","type","length","map","e","i","onClick","close","document","getElementById","RegisterPage","_useState","useState","_useState2","_slicedToArray","error","setError","_useState3","_useState4","fullnameInput","setFullnameInput","_useState5","_useState6","emailInput","setEmailInput","_useState7","_useState8","phoneInput","setPhoneInput","_useState9","_useState10","passwordInput","setPasswordInput","navigate","useNavigate","users","localStorage","getItem","JSON","parse","_Fragment","style","backgroundImage","onSubmit","preventDefault","trim","findIndex","x","email","toLowerCase","newUser","fullname","phone","password","push","setItem","stringify","LOGIN_PAGE","placeholder","value","onChange","target","autoComplete","Link","to"],"sourceRoot":""}